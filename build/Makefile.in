## $Id$

## arguments we want to run parrot with
PARROT_ARGS   :=

## configuration settings
VERSION       := @versiondir@
BIN_DIR       := @bindir@
LIB_DIR       := @libdir@$(VERSION)
DOC_DIR       := @doc_dir@$(VERSION)
MANDIR        := @mandir@$(VERSION)

# Set up extensions
LOAD_EXT      := @load_ext@
O             := @o@

# Various paths
PERL6GRAMMAR  := $(LIB_DIR)/library/PGE/Perl6Grammar.pbc
NQP           := $(LIB_DIR)/languages/nqp/nqp.pbc
PCT           := $(LIB_DIR)/library/PCT.pbc
PM_DIR        := $(LIB_DIR)/library
PMC_DIR       := src/pmc
OPS_DIR       := src/ops

## Setup some commands
MAKE          := @make_c@
PERL          := @perl@
PROVE         := @perl@ -I@build_dir@/lib
CAT           := @cat@
CHMOD         := @chmod@
CP            := @cp@
MKPATH        := @mkpath@
RM_F          := @rm_f@
RM_RF         := @rm_rf@
POD2MAN       := pod2man
#IF(parrot_is_shared and not(cygwin or win32)):export LD_RUN_PATH := @blib_dir@:$(LD_RUN_PATH)
PARROT        := $(BIN_DIR)/parrot@exe@
PBC_TO_EXE    := $(BIN_DIR)/pbc_to_exe@exe@
#IF(darwin):
#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@

PRIMITIVEARC_GROUP := $(PMC_DIR)/primitivearc_group$(LOAD_EXT)
PRIMITIVEARC_OPS := $(OPS_DIR)/primitivearc_ops$(LOAD_EXT)

PMC_DEPS := build/src/pmc/Makefile.in \
  $(PMC_DIR)/arcint.pmc \
  $(PMC_DIR)/arcnum.pmc \
	$(PMC_DIR)/arcchar.pmc \
	$(PMC_DIR)/arcstr.pmc \
	$(PMC_DIR)/arcsym.pmc \
	$(PMC_DIR)/arct.pmc \
	$(PMC_DIR)/arcnil.pmc \
	$(PMC_DIR)/arccons.pmc

OPS_DEPS := build/src/ops/Makefile.in $(OPS_DIR)/primitivearc.ops

SOURCES := \
  arc.pir \
  arcall.pir \
  builtins.pir \
  compiler.pir \
  read.pir \
  symtable.pir \
  types.pir

BUILTINS_PIR :=

DOCS := README

BUILD_CLEANUPS := \
  "*.pbc" \
  "src/gen_*.pir" \
  "*.c" \
  "*$(O)" \
  primitivearc@exe@ \
#IF(win32):  parrot-primitivearc.exe \
#IF(win32):  parrot-primitivearc.iss \
#IF(win32):  "setup-parrot-*.exe" \
  installable_primitivearc@exe@

TEST_CLEANUPS :=

# the default target
build: \
  $(PRIMITIVEARC_OPS) \
  $(PRIMITIVEARC_GROUP) \
  primitivearc.pbc

all: build primitivearc@exe@ installable

primitivearc.pbc: $(SOURCES)
	$(PARROT) $(PARROT_ARGS) -o primitivearc.pbc arc.pir

primitivearc@exe@: primitivearc.pbc
	$(PBC_TO_EXE) primitivearc.pbc

$(PRIMITIVEARC_GROUP): $(PMC_DEPS)
	$(MAKE) $(PMC_DIR)

$(PRIMITIVEARC_OPS): $(OPS_DEPS)
	$(MAKE) $(OPS_DIR)

installable: installable_primitivearc@exe@

installable_primitivearc@exe@: primitivearc.pbc
	$(PBC_TO_EXE) primitivearc.pbc --install

Makefile: build/Makefile.in
	$(PERL) Configure.pl

# This is a listing of all targets, that are meant to be called by users
help:
	@echo ""
	@echo "Following targets are available for the user:"
	@echo ""
	@echo "  build:             primitivearc.pbc"
	@echo "                     This is the default."
	@echo "  primitivearc@exe@      Self-hosting binary not to be installed."
	@echo "  all:               primitivearc.pbc primitivearc@exe@ installable"
	@echo "  installable:       Create libs and self-hosting binaries to be installed."
	@echo "  install:           Install the installable targets and docs."
	@echo ""
	@echo "Testing:"
	@echo "  test:              Run the test suite."
	@echo "  test-installable:  Test self-hosting targets."
	@echo "  testclean:         Clean up test results."
	@echo ""
	@echo "Cleaning:"
	@echo "  clean:             Basic cleaning up."
	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
	@echo "  distclean:         Removes also anything built, in theory"
	@echo ""
	@echo "Misc:"
	@echo "  help:              Print this help message."
	@echo ""

test: build
	$(PERL) -I$(LIB_DIR)/tools/lib t/harness #--bindir=$(BIN_DIR)

# basic run for missing libs
test-installable: installable
	echo "1" | ./installable_primitivearc@exe@

install: installable
	$(MAKE) $(OPS_DIR) install
	$(MAKE) $(PMC_DIR) install
	$(CP) installable_primitivearc@exe@ $(BIN_DIR)/parrot-primitivearc@exe@
	$(CHMOD) 0755 $(BIN_DIR)/parrot-primitivearc@exe@
	-$(MKPATH) $(LIB_DIR)/languages/primitivearc
	$(CP) primitivearc.pbc $(LIB_DIR)/languages/primitivearc/primitivearc.pbc
#	-$(MKPATH) $(MANDIR)/man1
#	$(POD2MAN) doc/running.pod > $(MANDIR)/man1/parrot-primitivearc.1
#	-$(MKPATH) $(DOC_DIR)/languages/primitivearc
#	$(CP) $(DOCS) $(DOC_DIR)/languages/primitivearc

uninstall:
	$(MAKE) $(OPS_DIR) uninstall
	$(MAKE) $(PMC_DIR) uninstall
	$(RM_F) $(BIN_DIR)/parrot-primitivearc@exe@
	$(RM_RF) $(LIB_DIR)/languages/primitivearc
#	$(RM_F) $(MANDIR)/man1/parrot-primitivearc.1
#	$(RM_RF) $(DOC_DIR)/languages/primitivearc

win32-inno-installer: installable
#	-$(MKPATH) man/man1
#	$(POD2MAN) doc/running.pod > man/man1/parrot-primitivearc.1
#	-$(MKPATH) man/html
#	pod2html --infile doc/running.pod --outfile man/html/parrot-primitivearc.html
	$(CP) installable_primitivearc@exe@ parrot-primitivearc.exe
	$(PERL) -I$(LIB_DIR)/tools/lib $(LIB_DIR)/tools/dev/mk_inno_language.pl primitivearc
	iscc parrot-primitivearc.iss

testclean:
	$(RM_F) $(TEST_CLEANUPS)

clean:
	$(MAKE) $(OPS_DIR) clean
	$(MAKE) $(PMC_DIR) clean
	$(RM_F) $(TEST_CLEANUPS) $(BUILD_CLEANUPS)

realclean:
	$(MAKE) $(OPS_DIR) realclean
	$(MAKE) $(PMC_DIR) realclean
	$(RM_F) $(TEST_CLEANUPS) $(BUILD_CLEANUPS) Makefile

distclean: realclean

codetest: codetest-make codetest-perl codetest-pir

T_MAKE  = build/Makefile.in build/src/pmc/Makefile.in build/src/ops/Makefile.in
T_PERL  = Configure.pl t/harness t/*.t lib/Parrot/Test/*.pm
T_PIR   = *.pir

codetest-make:
	 $(PROVE) @build_dir@/t/codingstd/filenames.t $(T_MAKE)
	 $(PERL) -I$(LIB_DIR)/tools/lib @build_dir@/t/codingstd/make_code_coda.t $(T_MAKE)
	 $(PERL) -I$(LIB_DIR)/tools/lib @build_dir@/t/codingstd/linelength.t $(T_MAKE)
	 $(PERL) -I$(LIB_DIR)/tools/lib @build_dir@/t/codingstd/trailing_space.t $(T_MAKE)

codetest-perl:
	 $(PERL) -I$(LIB_DIR)/tools/lib @build_dir@/t/codingstd/cuddled_else.t $(T_PERL)
	 $(PERL) -I$(LIB_DIR)/tools/lib @build_dir@/t/codingstd/filenames.t $(T_PERL)
	 $(PERL) -I$(LIB_DIR)/tools/lib @build_dir@/t/codingstd/linelength.t $(T_PERL)
	 $(PERL) -I$(LIB_DIR)/tools/lib @build_dir@/t/codingstd/perlcritic.t $(T_PERL)
	 $(PERL) -I$(LIB_DIR)/tools/lib @build_dir@/t/codingstd/trailing_space.t $(T_PERL)

codetest-pir:
	 $(PERL) @build_dir@/t/codingstd/filenames.t $(T_PIR)
	 $(PERL) @build_dir@/t/codingstd/linelength.t $(T_PIR)
	 $(PERL) @build_dir@/t/codingstd/pir_code_coda.t $(T_PIR)
	 $(PERL) @build_dir@/t/codingstd/tabs.t $(T_PIR)
	 $(PERL) @build_dir@/t/codingstd/trailing_space.t $(T_PIR)



# Local variables:
#   mode: makefile
# End:
# vim: ft=make:

