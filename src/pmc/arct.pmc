static void call_type_err(PARROT_INTERP, PMC *self, const char *expected) {
	PMC *err = Parrot_find_global_s(interp, Parrot_str_new_constant(interp, ""),
																		Parrot_str_new_constant(interp, "err"));
	STRING *msg = Parrot_sprintf_c(interp, "attempt to use an %Ss where an %s is expected", VTABLE_name(interp, self), expected);
	printf("%p\n", err);
	if (err) {
		Parrot_call_sub(interp, err, "vS", msg);
	}
}

pmclass ArcT
  dynpmc
  group primitivearc_group
  hll Arc {

	VTABLE INTVAL get_bool() {
		return 1;
	}

	VTABLE STRING* get_string() {
		call_type_err(INTERP, SELF, "ArcStr");
		return NULL;
	}

	VTABLE FLOATVAL get_number() {
		call_type_err(INTERP, SELF, "ArcNum");
		return 0;
	}

	VTABLE INTVAL get_integer() {
		call_type_err(INTERP, SELF, "ArcInt");
		return 0;
	}

	VTABLE STRING* name() {
		return Parrot_str_new_constant(INTERP, "t");
	}

	METHOD to_string() {
		STRING *res = Parrot_str_new_constant(INTERP, "t");
		RETURN(STRING *res);
	}

}
