/*
 * $Id$
 * Copyright (C) 20xx, Parrot Foundation.
 */

#include "parrot/dynext.h"
/*VERSION = PARROT_VERSION;*/

/* Op to get the address of a PMC. */
inline op primitivearc_pmc_addr(out INT, invar PMC) :base_core {
    $1 = (int) $2;
    goto NEXT();
}

/* gets a global var, raises an error if var is unbound */
inline op arc_get_global(out PMC, in STR) :base_core {
		PMC *res = Parrot_find_global_cur(interp, $2);
		if (res) {
			$1 = res;
			goto NEXT();
		} else {
			PMC *err = 
				Parrot_find_global_cur(interp,
															 Parrot_str_new_constant(interp, "err"));
			STRING *msg = Parrot_sprintf_c(interp, "var %Ss is unbound", $2);
			Parrot_pcc_invoke_sub_from_c_args(interp, err, "S->", msg);
			//Parrot_call_sub(interp, err, "vS", msg);
		}
}

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4:
 */
